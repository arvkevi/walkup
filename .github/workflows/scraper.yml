name: Scrape MLB Walk-up Songs

on:
  schedule:
    - cron: "0 0 * * *"  # Run daily at midnight UTC

jobs:
  get_walkups:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set up RDS access
        run: python configure_rds_access.py
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
          RDS_SECURITY_GROUP: ${{ secrets.RDS_SECURITY_GROUP }}

      - name: Wait for network changes to propagate
        run: sleep 30

      - name: Scrape walkups
        run: python scraper.py "${{ secrets.CONNECTION_URI }}" "${{ secrets.SPOTIFY_CLIENT_ID }}" "${{ secrets.SPOTIFY_CLIENT_SECRET }}"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1 }
          RDS_SECURITY_GROUP: ${{ secrets.RDS_SECURITY_GROUP }}

      - name: Clean up security group rules
        if: success()  # Only run if previous steps succeeded
        run: python cleanup_security_group.py
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
          RDS_SECURITY_GROUP: ${{ secrets.RDS_SECURITY_GROUP }}

      - name: Handle failure
        if: failure()
        run: |
          echo "::error::Scraper job failed. Check the logs for details."
          python cleanup_security_group.py || true  # Try to clean up even on failure
