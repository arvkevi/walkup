name: Scrape MLB Walk-up Songs

on:
  schedule:
    - cron: "0 0 * * *"  # Run daily at midnight UTC
  workflow_dispatch:  # Allow manual triggering

env:
  PYTHONUNBUFFERED: 1  # Enable real-time Python output
  REQUESTS_CA_BUNDLE: /etc/ssl/certs/ca-certificates.crt  # Ensure SSL cert verification

jobs:
  scrape_walkups:
    runs-on: ubuntu-latest
    environment: production
    timeout-minutes: 30  # Set maximum job duration
    
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref || github.ref_name }}  # Checkout current branch

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install boto3 psycopg2-binary
          pip install -r requirements.txt

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Get RDS Proxy connection
        id: get_proxy
        run: |
          echo "Getting RDS Proxy connection..."
          PROXY_URI=$(python get_proxy_connection.py)
          echo "proxy_uri=${PROXY_URI}" >> $GITHUB_OUTPUT
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          CONNECTION_URI: ${{ secrets.CONNECTION_URI }}

      - name: Run scraper
        run: |
          echo "Starting MLB walkup song scraper..."
          python scraper.py "${{ steps.get_proxy.outputs.proxy_uri }}" "${{ secrets.SPOTIFY_CLIENT_ID }}" "${{ secrets.SPOTIFY_CLIENT_SECRET }}"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          VPC_ID: ${{ secrets.VPC_ID }}

      - name: Handle failure
        if: failure()
        run: |
          echo "::error::Scraper job failed. Check the logs for details."
