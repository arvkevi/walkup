name: MLB Walkup scraper
on:
  schedule:
    - cron: '01 00 * * *'  # Run at 00:01 UTC daily
  workflow_dispatch:  # Allow manual trigger

jobs:
  get_walkups:
    runs-on: ubuntu-latest
    environment: production  # Use GitHub Environment for better secrets management
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Setup Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Verify environment variables
        run: |
          if [ -z "$AWS_ACCESS_KEY_ID" ]; then
            echo "AWS_ACCESS_KEY_ID is not set"
            exit 1
          fi
          if [ -z "$AWS_SECRET_ACCESS_KEY" ]; then
            echo "AWS_SECRET_ACCESS_KEY is not set"
            exit 1
          fi
          if [ -z "$AWS_REGION" ]; then
            echo "AWS_REGION is not set"
            exit 1
          fi
          if [ -z "$VPC_ID" ]; then
            echo "VPC_ID is not set"
            exit 1
          fi
          if [ -z "$RDS_SECURITY_GROUP" ]; then
            echo "RDS_SECURITY_GROUP is not set"
            exit 1
          fi
          if [ -z "$CONNECTION_URI" ]; then
            echo "CONNECTION_URI is not set"
            exit 1
          fi
          echo "All required environment variables are set"

      - name: Configure RDS access
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION || 'us-east-1' }}  # Default to us-east-1 if not set
          VPC_ID: ${{ secrets.VPC_ID }}
          RDS_SECURITY_GROUP: ${{ secrets.RDS_SECURITY_GROUP }}
        run: |
          python configure_rds_access.py
          sleep 30  # Wait for security group changes to propagate

      - name: Scrape walkups
        env:
          CONNECTION_URI: ${{ secrets.CONNECTION_URI }}
          SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
          SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
          AWS_REGION: ${{ secrets.AWS_REGION || 'us-east-1' }}  # Default to us-east-1 if not set
        run: |
          python scraper.py "$CONNECTION_URI" "$SPOTIFY_CLIENT_ID" "$SPOTIFY_CLIENT_SECRET"

      - name: Handle errors
        if: failure()
        run: |
          echo "::error::Scraper job failed. Check the logs for details."
